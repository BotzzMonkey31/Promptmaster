name: Deploy to Azure Container Apps

on:
  push:
    branches:
      - 18-setup-deployment-and-cicd

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check for secrets
      run: |
        if [ -n "${{ secrets.AZURE_CLIENT_ID }}" ]; then echo "AZURE_CLIENT_ID is set"; else echo "AZURE_CLIENT_ID is missing"; fi
        if [ -n "${{ secrets.AZURE_TENANT_ID }}" ]; then echo "AZURE_TENANT_ID is set"; else echo "AZURE_TENANT_ID is missing"; fi
        if [ -n "${{ secrets.AZURE_CLIENT_SECRET }}" ]; then echo "AZURE_CLIENT_SECRET is set"; else echo "AZURE_CLIENT_SECRET is missing"; fi
    
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Azure CLI using Service Principal
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        
    - name: Log in to Azure Container Registry
      run: |
        az acr login --name promptmasterregistry

    - name: Build and push Docker image to Azure Container Registry
      run: |
        docker build -t promptmasterregistry.azurecr.io/backend:latest ./backend
        docker build -t promptmasterregistry.azurecr.io/frontend:latest ./frontend
        docker push promptmasterregistry.azurecr.io/backend:latest
        docker push promptmasterregistry.azurecr.io/frontend:latest

    - name: Deploy to Azure Container Apps
      run: |
        az containerapp update \
          --name promptmaster-frontend \
          --resource-group ISNL_AIGame_EnriqueB \
          --image promptmasterregistry.azurecr.io/frontend:latest \
          --cpu 1 --memory 2Gi \
          --ingress 'external' \
          --target-port 8081
        
        az containerapp update \
          --name promptmaster-backend \
          --resource-group ISNL_AIGame_EnriqueB \
          --image promptmasterregistry.azurecr.io/backend:latest \
          --cpu 1 --memory 2Gi \
          --ingress 'external' \
          --target-port 8080